version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    platform: linux/amd64
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--api.dashboard=true"
      # Add insecure mode for development until DNS is set up
      - "--api.insecure=true"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Expose dashboard port in insecure mode
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DASHBOARD_HOST}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH}"
    restart: unless-stopped

  agent:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: eliza-agent
    command: pnpm start --characters="characters/Nayari.character.json"
    ports:
      - "3000:3000"
    volumes:
      # Base mounts from docker.sh
      - ./characters:/app/characters
      - ./.env:/app/.env
      - ./agent:/app/agent
      - ./docs:/app/docs
      - ./scripts:/app/scripts
      # Root project files for monorepo
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./lerna.json:/app/lerna.json
      - ./turbo.json:/app/turbo.json
      # Package mounts from docker.sh
      - ./packages/adapter-postgres/src:/app/packages/adapter-postgres/src
      - ./packages/adapter-sqlite/src:/app/packages/adapter-sqlite/src
      - ./packages/adapter-sqljs/src:/app/packages/adapter-sqljs/src
      - ./packages/adapter-supabase/src:/app/packages/adapter-supabase/src
      - ./packages/client-auto/src:/app/packages/client-auto/src
      - ./packages/client-direct/src:/app/packages/client-direct/src
      - ./packages/client-discord/src:/app/packages/client-discord/src
      - ./packages/client-farcaster/src:/app/packages/client-farcaster/src
      - ./packages/client-telegram/src:/app/packages/client-telegram/src
      - ./packages/client-twitter/src:/app/packages/client-twitter/src
      - ./packages/core/src:/app/packages/core/src
      - ./packages/plugin-bootstrap/src:/app/packages/plugin-bootstrap/src
      - ./packages/plugin-image-generation/src:/app/packages/plugin-image-generation/src
      - ./packages/plugin-node/src:/app/packages/plugin-node/src
      - ./packages/plugin-solana/src:/app/packages/plugin-solana/src
      - ./packages/plugin-evm/src:/app/packages/plugin-evm/src
      - ./packages/plugin-tee/src:/app/packages/plugin-tee/src
      # Core types mount (special case from docker.sh)
      - ./packages/core/types:/app/packages/core/types
      # Cache directories with proper permissions
      - type: volume
        source: agent-cache
        target: /app/packages/core/cache
        volume:
          nocopy: true
    networks:
      - web
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agent.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.agent.entrypoints=websecure"
      - "traefik.http.routers.agent.tls.certresolver=letsencrypt"
      - "traefik.http.services.agent.loadbalancer.server.port=3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_XI_API_KEY=${ELEVENLABS_XI_API_KEY}
      - DISCORD_APPLICATION_ID=${DISCORD_APPLICATION_ID}
      - DISCORD_API_TOKEN=${DISCORD_API_TOKEN}
      - TWITTER_DRY_RUN=${TWITTER_DRY_RUN}
      - TWITTER_USERNAME=${TWITTER_USERNAME}
      - TWITTER_PASSWORD=${TWITTER_PASSWORD}
      - TWITTER_EMAIL=${TWITTER_EMAIL}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - WALLET_SECRET_KEY=${WALLET_SECRET_KEY}
      - WALLET_PUBLIC_KEY=${WALLET_PUBLIC_KEY}
      - BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
      - SOL_ADDRESS=${SOL_ADDRESS}
      - SLIPPAGE=${SLIPPAGE}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - HELIUS_API_KEY=${HELIUS_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - USE_OPENAI_EMBEDDING=${USE_OPENAI_EMBEDDING:-false}
      - CACHE_STORE=${CACHE_STORE:-database}
      - PGLITE_DATA_DIR=${PGLITE_DATA_DIR:-memory://}
      - MODEL_CACHE_DIR=/app/packages/core/cache
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: eliza-client
    command: pnpm start:client
    ports:
      - "5173:5173"
    volumes:
      # Root project files for monorepo
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./lerna.json:/app/lerna.json
      - ./turbo.json:/app/turbo.json
      - ./.env:/app/.env
      # Project directories
      - ./client:/app/client
      - ./packages:/app/packages
    networks:
      - web
    depends_on:
      - agent
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.services.client.loadbalancer.server.port=5173"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_API_URL=https://api.${DOMAIN}
      - ENABLE_VOICE=${ENABLE_VOICE:-true}
      - ENABLE_STREAMING=${ENABLE_STREAMING:-true}
      - ELEVENLABS_XI_API_KEY=${ELEVENLABS_XI_API_KEY}
      - BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
      - HELIUS_API_KEY=${HELIUS_API_KEY}
    restart: unless-stopped

networks:
  web:
    name: web
    driver: bridge
    attachable: true
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: "eliza-net"

volumes:
  letsencrypt:
    driver: local
  agent-cache:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/packages/core/cache
      o: bind