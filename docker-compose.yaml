services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.email=contact@nayari.ai"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--ping=true"
      - "--ping.entrypoint=websecure"
      - "--accesslog=true"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - web
    restart: unless-stopped

  agent:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    command: pnpm start --characters="characters/Nayari.character.json"
    expose:
      - "3000"
    volumes:
      # Base mounts from docker.sh
      - ./characters:/app/characters
      - ./.env:/app/.env
      - ./agent:/app/agent
      - ./docs:/app/docs
      - ./scripts:/app/scripts
      # Root project files for monorepo
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./lerna.json:/app/lerna.json
      - ./turbo.json:/app/turbo.json
      # Package mounts from docker.sh
      - ./packages/adapter-postgres/src:/app/packages/adapter-postgres/src
      - ./packages/adapter-sqlite/src:/app/packages/adapter-sqlite/src
      - ./packages/adapter-sqljs/src:/app/packages/adapter-sqljs/src
      - ./packages/adapter-supabase/src:/app/packages/adapter-supabase/src
      - ./packages/client-auto/src:/app/packages/client-auto/src
      - ./packages/client-direct/src:/app/packages/client-direct/src
      - ./packages/client-discord/src:/app/packages/client-discord/src
      - ./packages/client-farcaster/src:/app/packages/client-farcaster/src
      - ./packages/client-telegram/src:/app/packages/client-telegram/src
      - ./packages/client-twitter/src:/app/packages/client-twitter/src
      - ./packages/core/src:/app/packages/core/src
      - ./packages/plugin-bootstrap/src:/app/packages/plugin-bootstrap/src
      - ./packages/plugin-image-generation/src:/app/packages/plugin-image-generation/src
      - ./packages/plugin-node/src:/app/packages/plugin-node/src
      - ./packages/plugin-solana/src:/app/packages/plugin-solana/src
      - ./packages/plugin-evm/src:/app/packages/plugin-evm/src
      - ./packages/plugin-tee/src:/app/packages/plugin-tee/src
      # Core types mount (special case from docker.sh)
      - ./packages/core/types:/app/packages/core/types
      # Cache directories with proper permissions
      - type: volume
        source: agent-cache
        target: /app/packages/core/cache
        volume:
          nocopy: true
    networks:
      - web
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.nayari.ai`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.api-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.api-headers.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.api-headers.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.api-headers.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.api-headers.headers.addvaryheader=true"
      - "traefik.http.routers.api.middlewares=api-headers"
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    working_dir: /app/client
    command: sh -c "pnpm run build && pnpm exec vite preview --host 0.0.0.0 --port 4173"
    expose:
      - "4173"
    volumes:
      # Root project files for monorepo
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./lerna.json:/app/lerna.json
      - ./turbo.json:/app/turbo.json
      - ./.env:/app/.env
      # Project directories
      - ./client:/app/client
      - ./packages:/app/packages
    networks:
      - web
    depends_on:
      - agent
    env_file:
      - .env
    environment:
      - VITE_API_URL=https://api.nayari.ai
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=4173
      - VITE_HOST=0.0.0.0
      - VITE_PORT=4173
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`nayari.ai`, `www.nayari.ai`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.services.client.loadbalancer.server.port=4173"
    restart: unless-stopped

networks:
  web:
    driver: bridge
    attachable: true
    enable_ipv6: false

volumes:
  agent-cache:
    driver: local
    driver_opts:
      type: none
      device: ./packages/core/cache
      o: bind