services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./client/dist:/usr/share/nginx/html:ro  # Add the built client files
    networks:
      - web
    depends_on:
      - agent
      - client
    restart: unless-stopped

  agent:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: eliza-agent
    command: pnpm start --characters="characters/Nayari.character.json"
    expose:
      - "3000"
    volumes:
      # Base mounts from docker.sh
      - ./characters:/app/characters
      - ./.env:/app/.env
      - ./agent:/app/agent
      - ./docs:/app/docs
      - ./scripts:/app/scripts
      # Root project files for monorepo
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./lerna.json:/app/lerna.json
      - ./turbo.json:/app/turbo.json
      # Package mounts from docker.sh
      - ./packages/adapter-postgres/src:/app/packages/adapter-postgres/src
      - ./packages/adapter-sqlite/src:/app/packages/adapter-sqlite/src
      - ./packages/adapter-sqljs/src:/app/packages/adapter-sqljs/src
      - ./packages/adapter-supabase/src:/app/packages/adapter-supabase/src
      - ./packages/client-auto/src:/app/packages/client-auto/src
      - ./packages/client-direct/src:/app/packages/client-direct/src
      - ./packages/client-discord/src:/app/packages/client-discord/src
      - ./packages/client-farcaster/src:/app/packages/client-farcaster/src
      - ./packages/client-telegram/src:/app/packages/client-telegram/src
      - ./packages/client-twitter/src:/app/packages/client-twitter/src
      - ./packages/core/src:/app/packages/core/src
      - ./packages/plugin-bootstrap/src:/app/packages/plugin-bootstrap/src
      - ./packages/plugin-image-generation/src:/app/packages/plugin-image-generation/src
      - ./packages/plugin-node/src:/app/packages/plugin-node/src
      - ./packages/plugin-solana/src:/app/packages/plugin-solana/src
      - ./packages/plugin-evm/src:/app/packages/plugin-evm/src
      - ./packages/plugin-tee/src:/app/packages/plugin-tee/src
      # Core types mount (special case from docker.sh)
      - ./packages/core/types:/app/packages/core/types
      # Cache directories with proper permissions
      - type: volume
        source: agent-cache
        target: /app/packages/core/cache
        volume:
          nocopy: true
    networks:
      - web
    env_file:
      - .env
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: eliza-client
    working_dir: /app/client
    command: sh -c "pnpm run build"  # Only build, let nginx serve the files
    expose:
      - "4173"
    volumes:
      # Root project files for monorepo
      - ./package.json:/app/package.json
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./lerna.json:/app/lerna.json
      - ./turbo.json:/app/turbo.json
      - ./.env:/app/.env
      # Project directories
      - ./client:/app/client
      - ./packages:/app/packages
    networks:
      - web
    depends_on:
      - agent
    env_file:
      - .env
    environment:
      - VITE_API_URL=http://api.nayari.ai
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=4173
    restart: unless-stopped

networks:
  web:
    driver: bridge
    attachable: true
    enable_ipv6: false

volumes:
  agent-cache:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/packages/core/cache
      o: bind